# gerar script de criacao do banco de dados
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# docker-compose up --build --force-recreate
# docker-compose up 
# ./mvnw clean package -DskipTests
# docker-compose -f stack.yml up
# docker-compose -f stack.yml up --build --force-recreate

# drop schema public cascade;

# create schema public;

spring:
  datasource:
    name: AlgafoodDataSource
    driver-class-name: org.postgresql.Driver    
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/algafood-db}
    password: ${SPRING_DATASOURCE_USERNAME:postgres}
    username: ${SPRING_DATASOURCE_PASSWORD:password}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: algafoodPool
      connection-test-query: select now()
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 20000
      idle-timeout: 10000
  jpa:
    open-in-view: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
#        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: true
