# gerar script de criacao do banco de dados
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# ./mvnw flyway:repair -Dflyway.configFiles=src/main/resources/flyway.properties
# docker-compose up --build --force-recreate
# docker-compose up 
# ./mvnw clean package -DskipTests
# docker-compose -f stack.yml up
# docker-compose -f stack.yml up --build --force-recreate

# drop schema public cascade;

# create schema public;

spring:
  flyway:
    locations: classpath:db/migration,classpath:db/data
  datasource:
    name: AlgafoodDataSource
    driver-class-name: org.postgresql.Driver    
    url: jdbc:postgresql://localhost:5432/algafood-db
    password: password
    username: postgres
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: algafoodPool
      connection-test-query: select now()
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 20000
      idle-timeout: 10000
  jpa:
    open-in-view: true
#    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    hibernate:
#      ddl-auto: create-drop
    properties:
      hibernate:
#        hbm2ddl:
#          delimiter:
#        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
#      javax:
#        persistence:
#          schema-generation:
#            create-source: metadata
#            scripts:
#              action: create
#              create-target: create.sql
    show-sql: true
#logging:
#  level:
#    org.springframework.jdbc: DEBUG
#    javax.persistence.criteria: DEBUG
#  mail:
#    host: smtp.sendgrid.net
#    port: 587
#    username: apikey
#    password: ${EMAIL_PASSWORD}
  mail:
    host: sandbox.smtp.mailtrap.io
    port: 2525
    username: ${USER_EMAIL}
    password: ${PASSWORD_EMAIL}
#    properties.mail.smtp:
#      auth: true
#      starttls.enable: true
algafood:
  storage:
    type: local
    local:
      images-directory: C:\Users\Felix\Documents\dev\store
    s3:
      access-key: access-key-id
      secret-key: access-key-secret
      bucket: algafood
      region: us-east-1
      directory: catalog
  mail:
    impl: sandbox # smtp # sandbox
    sender: Algafood <felipe.dev.test@gmail.com>
    sandbox:
      to: felipe.dev.test@gmail.com